name: Version changed

on:
  pull_request:
    branches: ["main", "develop"]

jobs:
  check_if_version_changed:
    runs-on: ubuntu-latest
    outputs:
      to_version: ${{ steps.new_version.outputs.prop }}
      if_version_changed: ${{ steps.compare.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
      - name: Get new version
        id: new_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Get old version
        id: old_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'      
      - name: Compare version
        id: compare
        run: |
          if [[ "${{steps.old_version.outputs.prop}}" == "${{steps.new_version.outputs.prop}}" ]]; then
            echo "Package version has not changed. Version is actually ${{steps.old_version.outputs.prop}}"
            echo "Please upgrade version"
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
  deploy1:   
    runs-on: ubuntu-latest
    needs:
      - check_if_version_changed
    steps:
      - run: echo "Version has changed ? ${{ needs.check_if_version_changed.outputs.changed }}"
      - run: echo "Version is ${{ needs.check_if_version_changed.outputs.to_version }}"

  deploy-on-if:   
    runs-on: ubuntu-latest
    needs:
      - check_if_version_changed
    if: ${{ needs.check_if_version_changed.outputs.changed }} == 'true'
    steps:
      - run: echo "Version has changed !"
