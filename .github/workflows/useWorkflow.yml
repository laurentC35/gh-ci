name: Check if version change

on:
  pull_request:
    branches: ["main", "develop"]

jobs:
  check_if_version_changed:
    uses: ./.github/workflows/test-change-version.yml
    with:
      current_branch: ${{ github.ref }}
      target_branch: ${{ github.event.pull_request.base.ref }}

  publish_on_npm:
    runs-on: ubuntu-latest
    needs:
      - check_if_version_changed
    outputs:
      new_version: ${{ steps.publish.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Get current package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'
      - run: echo "Yarn build"
      - name: Publishing on NPM
        id: publish
        run: |
          git config --global user.email "no-reply@insee.fr"
          git config --global user.name "Insee"

          echo "ref : ${{github.ref}"

          case ${{github.ref}} in
            'refs/heads/main' )
              export TAG=latest
              export NEW_VERSION=${{steps.version.outputs.prop}} ;;
            'refs/heads/develop' )
              export TAG=beta
              export NEW_VERSION=${{steps.version.outputs.prop}}-$TAG ;;
            'refs/heads/prisme' )
              export TAG=prisme
              export NEW_VERSION=${{steps.version.outputs.prop}}-$TAG ;;
          esac
          echo "New version : $NEW_VERSION"
          echo "TAG" : $TAG"
          
          npm show . dist-tags.$TAG

          if [ "$(npm show . dist-tags.$TAG)" = "$NEW_VERSION" ]; then
            echo "This version is already published"
            exit 1
          fi
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  create_gh_release:
    needs: publish_on_npm
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.publish_on_npm.outputs.new_version }}
          release_name: "Release ${{ needs.publish_on_npm.outputs.new_version }}"
          draft: false
          prerelease: false
